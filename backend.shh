#!/bin/bash 

USER=$(id -u)
TIME_STAMP=$(date +%F-%H-%M-%S)
SCRIPT_NAME=$( echo $0 | cut -d "." f1 )
LOG_FILE=/tmp/$SCRIPT_NAME-$TIME_STAMP.log 
# enabling the colours 
R="\e[31m"
Y="\e[32m"
G="\e[33m"
N="\e[0m"

if [ $USER -eq 0 ]
then 
    echo " you are the super-user"
else
    echo " need super-user to do this"
    exit 1 # manually exiting 
fi
validate()
    if [ $1 -eq 0 ]
    then
        echo -e "$2 .. done successfully $N "
    else
        echo "$2 .. failed .."
        exit 1 # manually exiting 
    fi 

dnf module disable nodejs:18 -y &>> LOG_FILE
validate $? "disabling the nodw.js"

dnf module enable nodejs:20 -y &>> LOG_FILE
validate $? "enabling the nodejs:20"

dnf install nodejs -y &>> LOG_FILE
validate $? "installing nodejs"

id expense &>> LOG_FILE
if [ $? -eq 0 ]
then
    echo "user already exited"
else
    echo "user not existed need to create the Expense User"
    useradd expense &>> LOG_FILE
    validate $? "creating expense user"
fi 

mkdir -p /app &>> LOG_FILE
validate $? "creating /app directory"

curl -o /tmp/backend.zip https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip &>> LOG_FILE
validate $? "downlode the Backend code"

unzip /tmp/backend.zip &>> LOG_FILE
validate $? "unziping the backend code "

cd /app &>> LOG_FILE
validate $? "moving to the /app directory"

npm install &>> LOG_FILE
validate $? "installing the nodejs dependences"

cp /home/ec2-user/shell/backend.seervice /etc/systemd/system/backend.service &>> LOG_FILE
validate $? "copying the backend service"

systemctl daemon reload  &>> LOG_FILE
validate $? "daemon reload"

systemctl enable backend &>> LOG_FILE
validate $? "enabling backend"

systemctl start backend &>> LOG_FILE
validate $? "starting backend"

dnf install mysql -y &>> LOG_FILE
validate $? "installing mysql clint"

mysql -h db.dawsskedarnath.online -uroot -pExpenseApp@1 < /app/schema/backend.sql &>> LOG_FILE
validate $? "loading the scheama"

systemctl restart backend &>> LOG_FILE
validate $? "restarting the backend"

